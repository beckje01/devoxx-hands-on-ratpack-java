/*
 * This file is generated by jOOQ.
*/
package lab07.jooq.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import lab07.jooq.tables.Book;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record6<String, Integer, BigDecimal, String, String, String> {

    private static final long serialVersionUID = 620890221;

    /**
     * Setter for <code>lab07.book.isbn</code>.
     */
    public void setIsbn(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>lab07.book.isbn</code>.
     */
    public String getIsbn() {
        return (String) get(0);
    }

    /**
     * Setter for <code>lab07.book.quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>lab07.book.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>lab07.book.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>lab07.book.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>lab07.book.title</code>.
     */
    public void setTitle(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>lab07.book.title</code>.
     */
    public String getTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>lab07.book.author</code>.
     */
    public void setAuthor(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>lab07.book.author</code>.
     */
    public String getAuthor() {
        return (String) get(4);
    }

    /**
     * Setter for <code>lab07.book.publisher</code>.
     */
    public void setPublisher(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>lab07.book.publisher</code>.
     */
    public String getPublisher() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Integer, BigDecimal, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, Integer, BigDecimal, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Book.BOOK.ISBN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Book.BOOK.QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return Book.BOOK.PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Book.BOOK.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Book.BOOK.AUTHOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Book.BOOK.PUBLISHER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getIsbn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getPublisher();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value1(String value) {
        setIsbn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value2(Integer value) {
        setQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value3(BigDecimal value) {
        setPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value4(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value5(String value) {
        setAuthor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord value6(String value) {
        setPublisher(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookRecord values(String value1, Integer value2, BigDecimal value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(String isbn, Integer quantity, BigDecimal price, String title, String author, String publisher) {
        super(Book.BOOK);

        set(0, isbn);
        set(1, quantity);
        set(2, price);
        set(3, title);
        set(4, author);
        set(5, publisher);
    }
}
